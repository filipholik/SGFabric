/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: Header.proto */

#ifndef PROTOBUF_C_Header_2eproto__INCLUDED
#define PROTOBUF_C_Header_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1003000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1004001 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif


typedef struct Header Header;


/* --- enums --- */

typedef enum _Header__Type {
  HEADER__TYPE__HELLO = 0,
  HEADER__TYPE__FUNCTION_ADD_REQUEST = 1,
  HEADER__TYPE__FUNCTION_ADD_REPLY = 2,
  HEADER__TYPE__FUNCTION_REMOVE_REQUEST = 3,
  HEADER__TYPE__FUNCTION_REMOVE_REPLY = 4,
  HEADER__TYPE__FUNCTION_LIST_REQUEST = 5,
  HEADER__TYPE__FUNCTION_LIST_REPLY = 6,
  HEADER__TYPE__TABLES_LIST_REQUEST = 7,
  HEADER__TYPE__TABLES_LIST_REPLY = 8,
  HEADER__TYPE__TABLE_LIST_REQUEST = 9,
  HEADER__TYPE__TABLE_LIST_REPLY = 10,
  HEADER__TYPE__TABLE_ENTRY_GET_REQUEST = 11,
  HEADER__TYPE__TABLE_ENTRY_GET_REPLY = 12,
  HEADER__TYPE__TABLE_ENTRY_INSERT_REQUEST = 13,
  HEADER__TYPE__TABLE_ENTRY_INSERT_REPLY = 14,
  HEADER__TYPE__TABLE_ENTRY_DELETE_REQUEST = 15,
  HEADER__TYPE__TABLE_ENTRY_DELETE_REPLY = 16,
  HEADER__TYPE__PACKET_IN = 17,
  HEADER__TYPE__PACKET_OUT = 18,
  HEADER__TYPE__NOTIFY = 19
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(HEADER__TYPE)
} Header__Type;

/* --- messages --- */

struct  Header
{
  ProtobufCMessage base;
};
#define HEADER__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&header__descriptor) \
     }


/* Header methods */
void   header__init
                     (Header         *message);
size_t header__get_packed_size
                     (const Header   *message);
size_t header__pack
                     (const Header   *message,
                      uint8_t             *out);
size_t header__pack_to_buffer
                     (const Header   *message,
                      ProtobufCBuffer     *buffer);
Header *
       header__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   header__free_unpacked
                     (Header *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Header_Closure)
                 (const Header *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor header__descriptor;
extern const ProtobufCEnumDescriptor    header__type__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_Header_2eproto__INCLUDED */
