/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: Function.proto */

#ifndef PROTOBUF_C_Function_2eproto__INCLUDED
#define PROTOBUF_C_Function_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1003000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1004001 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif


typedef struct FunctionAddRequest FunctionAddRequest;
typedef struct FunctionAddReply FunctionAddReply;
typedef struct FunctionRemoveRequest FunctionRemoveRequest;
typedef struct FunctionRemoveReply FunctionRemoveReply;
typedef struct FunctionListEntry FunctionListEntry;
typedef struct FunctionListRequest FunctionListRequest;
typedef struct FunctionListReply FunctionListReply;


/* --- enums --- */

typedef enum _FunctionAddReply__FunctionAddStatus {
  FUNCTION_ADD_REPLY__FUNCTION_ADD_STATUS__OK = 0,
  FUNCTION_ADD_REPLY__FUNCTION_ADD_STATUS__INVALID_STAGE = 1,
  FUNCTION_ADD_REPLY__FUNCTION_ADD_STATUS__INVALID_FUNCTION = 2
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(FUNCTION_ADD_REPLY__FUNCTION_ADD_STATUS)
} FunctionAddReply__FunctionAddStatus;
typedef enum _FunctionRemoveReply__FunctionRemoveStatus {
  FUNCTION_REMOVE_REPLY__FUNCTION_REMOVE_STATUS__OK = 0,
  FUNCTION_REMOVE_REPLY__FUNCTION_REMOVE_STATUS__INVALID_STAGE = 1
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(FUNCTION_REMOVE_REPLY__FUNCTION_REMOVE_STATUS)
} FunctionRemoveReply__FunctionRemoveStatus;

/* --- messages --- */

struct  FunctionAddRequest
{
  ProtobufCMessage base;
  char *name;
  uint32_t index;
  ProtobufCBinaryData elf;
};
#define FUNCTION_ADD_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&function_add_request__descriptor) \
    , (char *)protobuf_c_empty_string, 0, {0,NULL} }


struct  FunctionAddReply
{
  ProtobufCMessage base;
  FunctionAddReply__FunctionAddStatus status;
};
#define FUNCTION_ADD_REPLY__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&function_add_reply__descriptor) \
    , FUNCTION_ADD_REPLY__FUNCTION_ADD_STATUS__OK }


struct  FunctionRemoveRequest
{
  ProtobufCMessage base;
  uint32_t index;
};
#define FUNCTION_REMOVE_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&function_remove_request__descriptor) \
    , 0 }


struct  FunctionRemoveReply
{
  ProtobufCMessage base;
  FunctionRemoveReply__FunctionRemoveStatus status;
};
#define FUNCTION_REMOVE_REPLY__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&function_remove_reply__descriptor) \
    , FUNCTION_REMOVE_REPLY__FUNCTION_REMOVE_STATUS__OK }


struct  FunctionListEntry
{
  ProtobufCMessage base;
  char *name;
  uint32_t index;
  uint64_t counter;
};
#define FUNCTION_LIST_ENTRY__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&function_list_entry__descriptor) \
    , (char *)protobuf_c_empty_string, 0, 0 }


struct  FunctionListRequest
{
  ProtobufCMessage base;
};
#define FUNCTION_LIST_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&function_list_request__descriptor) \
     }


struct  FunctionListReply
{
  ProtobufCMessage base;
  size_t n_entries;
  FunctionListEntry **entries;
};
#define FUNCTION_LIST_REPLY__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&function_list_reply__descriptor) \
    , 0,NULL }


/* FunctionAddRequest methods */
void   function_add_request__init
                     (FunctionAddRequest         *message);
size_t function_add_request__get_packed_size
                     (const FunctionAddRequest   *message);
size_t function_add_request__pack
                     (const FunctionAddRequest   *message,
                      uint8_t             *out);
size_t function_add_request__pack_to_buffer
                     (const FunctionAddRequest   *message,
                      ProtobufCBuffer     *buffer);
FunctionAddRequest *
       function_add_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   function_add_request__free_unpacked
                     (FunctionAddRequest *message,
                      ProtobufCAllocator *allocator);
/* FunctionAddReply methods */
void   function_add_reply__init
                     (FunctionAddReply         *message);
size_t function_add_reply__get_packed_size
                     (const FunctionAddReply   *message);
size_t function_add_reply__pack
                     (const FunctionAddReply   *message,
                      uint8_t             *out);
size_t function_add_reply__pack_to_buffer
                     (const FunctionAddReply   *message,
                      ProtobufCBuffer     *buffer);
FunctionAddReply *
       function_add_reply__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   function_add_reply__free_unpacked
                     (FunctionAddReply *message,
                      ProtobufCAllocator *allocator);
/* FunctionRemoveRequest methods */
void   function_remove_request__init
                     (FunctionRemoveRequest         *message);
size_t function_remove_request__get_packed_size
                     (const FunctionRemoveRequest   *message);
size_t function_remove_request__pack
                     (const FunctionRemoveRequest   *message,
                      uint8_t             *out);
size_t function_remove_request__pack_to_buffer
                     (const FunctionRemoveRequest   *message,
                      ProtobufCBuffer     *buffer);
FunctionRemoveRequest *
       function_remove_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   function_remove_request__free_unpacked
                     (FunctionRemoveRequest *message,
                      ProtobufCAllocator *allocator);
/* FunctionRemoveReply methods */
void   function_remove_reply__init
                     (FunctionRemoveReply         *message);
size_t function_remove_reply__get_packed_size
                     (const FunctionRemoveReply   *message);
size_t function_remove_reply__pack
                     (const FunctionRemoveReply   *message,
                      uint8_t             *out);
size_t function_remove_reply__pack_to_buffer
                     (const FunctionRemoveReply   *message,
                      ProtobufCBuffer     *buffer);
FunctionRemoveReply *
       function_remove_reply__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   function_remove_reply__free_unpacked
                     (FunctionRemoveReply *message,
                      ProtobufCAllocator *allocator);
/* FunctionListEntry methods */
void   function_list_entry__init
                     (FunctionListEntry         *message);
size_t function_list_entry__get_packed_size
                     (const FunctionListEntry   *message);
size_t function_list_entry__pack
                     (const FunctionListEntry   *message,
                      uint8_t             *out);
size_t function_list_entry__pack_to_buffer
                     (const FunctionListEntry   *message,
                      ProtobufCBuffer     *buffer);
FunctionListEntry *
       function_list_entry__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   function_list_entry__free_unpacked
                     (FunctionListEntry *message,
                      ProtobufCAllocator *allocator);
/* FunctionListRequest methods */
void   function_list_request__init
                     (FunctionListRequest         *message);
size_t function_list_request__get_packed_size
                     (const FunctionListRequest   *message);
size_t function_list_request__pack
                     (const FunctionListRequest   *message,
                      uint8_t             *out);
size_t function_list_request__pack_to_buffer
                     (const FunctionListRequest   *message,
                      ProtobufCBuffer     *buffer);
FunctionListRequest *
       function_list_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   function_list_request__free_unpacked
                     (FunctionListRequest *message,
                      ProtobufCAllocator *allocator);
/* FunctionListReply methods */
void   function_list_reply__init
                     (FunctionListReply         *message);
size_t function_list_reply__get_packed_size
                     (const FunctionListReply   *message);
size_t function_list_reply__pack
                     (const FunctionListReply   *message,
                      uint8_t             *out);
size_t function_list_reply__pack_to_buffer
                     (const FunctionListReply   *message,
                      ProtobufCBuffer     *buffer);
FunctionListReply *
       function_list_reply__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   function_list_reply__free_unpacked
                     (FunctionListReply *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*FunctionAddRequest_Closure)
                 (const FunctionAddRequest *message,
                  void *closure_data);
typedef void (*FunctionAddReply_Closure)
                 (const FunctionAddReply *message,
                  void *closure_data);
typedef void (*FunctionRemoveRequest_Closure)
                 (const FunctionRemoveRequest *message,
                  void *closure_data);
typedef void (*FunctionRemoveReply_Closure)
                 (const FunctionRemoveReply *message,
                  void *closure_data);
typedef void (*FunctionListEntry_Closure)
                 (const FunctionListEntry *message,
                  void *closure_data);
typedef void (*FunctionListRequest_Closure)
                 (const FunctionListRequest *message,
                  void *closure_data);
typedef void (*FunctionListReply_Closure)
                 (const FunctionListReply *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor function_add_request__descriptor;
extern const ProtobufCMessageDescriptor function_add_reply__descriptor;
extern const ProtobufCEnumDescriptor    function_add_reply__function_add_status__descriptor;
extern const ProtobufCMessageDescriptor function_remove_request__descriptor;
extern const ProtobufCMessageDescriptor function_remove_reply__descriptor;
extern const ProtobufCEnumDescriptor    function_remove_reply__function_remove_status__descriptor;
extern const ProtobufCMessageDescriptor function_list_entry__descriptor;
extern const ProtobufCMessageDescriptor function_list_request__descriptor;
extern const ProtobufCMessageDescriptor function_list_reply__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_Function_2eproto__INCLUDED */
